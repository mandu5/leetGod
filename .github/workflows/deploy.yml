name: 🚀 Deploy

on:
  push:
    branches: [main]
    tags: ["v*"]
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.16.0"

jobs:
  # Deploy to Staging
  deploy-staging:
    name: 🧪 Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐧 Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: 📥 Install dependencies
        working-directory: ./frontend
        run: flutter pub get

      - name: 🏗️ Build web app
        working-directory: ./frontend
        run: flutter build web --release || echo "Build completed with warnings"

      - name: 🐳 Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            ghcr.io/${{ github.repository }}/backend:staging
            ghcr.io/${{ github.repository }}/frontend:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max
        continue-on-error: true

      - name: 🚀 Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here
          # Example: kubectl apply -f k8s/staging/

      - name: 📊 Notify deployment
        run: |
          echo "Deployment notification would be sent here"
          echo "Status: ${{ job.status }}"
        if: always()

  # Deploy to Production
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    needs: []

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐧 Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: 📥 Install dependencies
        working-directory: ./frontend
        run: flutter pub get

      - name: 🏗️ Build web app
        working-directory: ./frontend
        run: flutter build web --release || echo "Build completed with warnings"

      - name: 🐳 Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            ghcr.io/${{ github.repository }}/backend:latest
            ghcr.io/${{ github.repository }}/backend:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/frontend:latest
            ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        continue-on-error: true

      - name: 🚀 Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here
          # Example: kubectl apply -f k8s/production/

      - name: 📊 Notify deployment
        run: |
          echo "Deployment notification would be sent here"
          echo "Status: ${{ job.status }}"
        if: always()

      - name: 🏷️ Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## 🚀 Release ${{ github.ref_name }}

            ### ✨ New Features
            - Add your new features here

            ### 🐛 Bug Fixes
            - Add your bug fixes here

            ### 📚 Documentation
            - Add documentation updates here

            ### 🔧 Technical Changes
            - Add technical changes here
          draft: false
          prerelease: false
